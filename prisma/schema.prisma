// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model ChatRecord {
  id           String    @id @default(uuid())
  userId       String?   
  roomId       String     @default("temp-default-room-id")
  question     String
  answer       String    @db.Text
  status       Int
  createdAt    DateTime  @default(now())
  completedAt  DateTime?
  
  // 定义与ChatSession的关联，指定关联名称
  //session      ChatSession @relation("ChatSessionToRecords", fields: [roomId], references: [roomId], onDelete: Cascade)
  
  // 索引
  @@index([userId])
 
  @@index([createdAt])
  @@index([status])
  @@map("chat_records")
}

model ChatSession {
  roomId          String    @id
  userId          String?   
  createdAt       DateTime  @default(now())
  updateTimeStamp DateTime?
  // 反向关联，使用与ChatRecord相同的关联名称
//  records         ChatRecord[] @relation("ChatSessionToRecords")
  
  @@map("chat_session")
}
    
